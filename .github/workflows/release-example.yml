---
name: Release Example on Tag

on:
  workflow_dispatch:
    inputs:
      example_version:
        description: "Version number of release"
        required: true

jobs:
  # Check the rust formatting
  format:
    name: Rust Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Rust Toolchain setup
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Format Check
        uses: mbrobbel/rustfmt-check@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  # Build the Linux release artifacts
  release-tag-example:
    name: Tag Release Example
    runs-on: ubuntu-latest
    needs: format

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Toolchain setup
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu

      - name: Cross setup
        run: cargo install cross

      - name: Test
        run: cross test --target=${{ matrix.TARGET }}

      - name: Build
        run: cross build --release --target=${{ matrix.TARGET }}

      - name: Package Release
        run: tar cvzf snapcraft-rust-example-${{ matrix.TARGET }}.tar.gz --directory=target/${{ matrix.TARGET }}/release snapcraft-rust-example

      - name: Generate SHA checksum
        run: shasum -a 256 -U snapcraft-rust-example-${{ matrix.TARGET }}.tar.gz > snapcraft-rust-example-${{ matrix.TARGET }}.sha

      - name: Generate MD5 checksum
        run: md5sum --tag snapcraft-rust-example-${{ matrix.TARGET }}.tar.gz > snapcraft-rust-example-${{ matrix.TARGET }}.md5

      - name: Upload the artifact with the workflow run
        uses: actions/upload-artifact@v4
        with:
          name: snapcraft-rust-example-${{ matrix.TARGET }}-${{ github.event.inputs.example_version }}
          path: snapcraft-rust-example-${{ matrix.TARGET }}.*
          retention-days: 1

  # Package the artifacts as a release package
  release-tag-example-package:
    name: Package the tag-release example
    runs-on: ubuntu-latest
    permissions: write-all
    needs: [release-tag-example]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all release artifacts from the workflow
        uses: actions/download-artifact@v4

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          config: cliff.toml
        env:
          OUTPUT: CHANGELOG.md
          GITHUB_REPO: ${{ github.repository }}

      - name: Create Example Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: CHANGELOG.md
          tag_name: "${{ github.ref_name }}"
          name: "Release ${{ github.ref_name }}"
          token: "${{ secrets.GITHUB_TOKEN }}"
          files: |
            LICENSE
            **/snapcraft-rust-example-*.*

  # Kick off the workflow in the snap repo (a1ecbr0wn/snapcraft) that will generate the snapcraft yaml file
  generate-snap:
    name: Initiate the generation of the snapcraft yaml file
    runs-on: ubuntu-latest
    needs: [release-tag-example]
    steps:
      - name: Repository Dispatch
        uses: benc-uk/workflow-dispatch@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repo: a1ecbr0wn/snapcraft
          ref: ${{ github.ref }}
          workflow: snap.yml
          inputs: '{ "snap_version": "${{ github.event.inputs.example_version }}" }'
